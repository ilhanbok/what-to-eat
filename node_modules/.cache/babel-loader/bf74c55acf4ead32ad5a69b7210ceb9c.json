{"ast":null,"code":"var _jsxFileName = \"/Users/wangruijia/Desktop/what-to-eat/src/components/Content.js\";\n// dependencies\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport uuidv4 from 'uuid/v4'; // components\n\nimport SearchBar from './search/SearchBar';\nimport RestaurantPanel from './RestaurantPanel';\nimport Loading from './Loading';\nimport { SearchProvider, SearchConsumer } from './search/SearchContext'; // constants\n\nimport Constants from './Constants';\n\nclass Content extends Component {\n  // static propTypes = {\n  //     className: PropTypes.string,\n  // };\n  constructor(props) {\n    super(props);\n    this.searchTextChange = this.searchTextChange.bind(this);\n    this.searchByValue = this.searchByValue.bind(this);\n    this.state = {\n      restaurants: [],\n      showLoading: false,\n      modifyOrig: false,\n      responseId: ''\n    };\n    this.allConstants = new Constants(); // console.log('Received props', this.props)\n  }\n\n  searchTextChange(event) {\n    event.persist(); // change the state with the value typed in the search box\n\n    this.setState({\n      searchText: event.target.value\n    });\n\n    if (event.keyCode == 13 || event.which == 13) {\n      this.searchByValue();\n    }\n  }\n\n  componentDidMount() {\n    this.getRestaurants();\n  }\n\n  searchByValue(event) {\n    const {\n      allConstants\n    } = this;\n\n    if (event) {\n      event.persist();\n      let id = event.target.id;\n      console.log('Function clicked from COntext', id);\n      let searchType = id.substring(0, id.indexOf('-'));\n      let searchValue = id.substr(id.indexOf('-') + 1); // define the data\n\n      let data = {};\n      data[searchType] = searchValue; // define url\n\n      let url = allConstants.getRestaurants.replace('{value}', ''); // API call to the back end\n\n      this.getRestaurants(url, data);\n    } else if (this.state.searchText != \"\") {\n      // if ENTER key is pressed\n      console.log('ENTER key pressed / SEARCH button clicked...', this.state.searchText); // API call to the back end\n\n      this.getRestaurants();\n    }\n  } // get all the restaurants\n\n\n  getRestaurants(url, data) {\n    // set state to show the Loading icon\n    this.setState({\n      showLoading: true\n    });\n    const {\n      allConstants\n    } = this;\n    let searchText = this.state.searchText && this.props.searchText !== this.state.searchText ? this.state.searchText : this.props.searchText;\n    let axiosConfig = {\n      url: url ? url : allConstants.getRestaurants.replace('{value}', searchText),\n      method: allConstants.method.POST,\n      header: allConstants.header\n    };\n\n    if (data) {\n      axiosConfig[\"data\"] = data;\n    } // console.log('CONFIG is now', axiosConfig)\n\n\n    axios(axiosConfig).then(res => {\n      console.log('Response from back end', res.data); // add the response along with an unique id for each response\n\n      this.setState({\n        restaurants: [...res.data],\n        showLoading: false,\n        modifyOrig: true,\n        responseId: uuidv4()\n      });\n    }).catch(err => {\n      console.log('unable to get the data', err);\n    });\n  }\n\n  render() {\n    let {\n      restaurants,\n      showLoading,\n      modifyOrig,\n      responseId\n    } = this.state; // console.log('State in the Content', this.state)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-div-search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchByValue: this.searchByValue,\n      searchTextChange: this.searchTextChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    })), showLoading == true ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 34\n      }\n    }) : null, /*#__PURE__*/React.createElement(SearchProvider, {\n      value: this.searchByValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RestaurantPanel, {\n      showLoading: showLoading,\n      restaurants: restaurants,\n      modifyOrig: modifyOrig,\n      responseId: responseId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/wangruijia/Desktop/what-to-eat/src/components/Content.js"],"names":["React","Component","axios","uuidv4","SearchBar","RestaurantPanel","Loading","SearchProvider","SearchConsumer","Constants","Content","constructor","props","searchTextChange","bind","searchByValue","state","restaurants","showLoading","modifyOrig","responseId","allConstants","event","persist","setState","searchText","target","value","keyCode","which","componentDidMount","getRestaurants","id","console","log","searchType","substring","indexOf","searchValue","substr","data","url","replace","axiosConfig","method","POST","header","then","res","catch","err","render"],"mappings":"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","sourcesContent":["// dependencies\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport uuidv4 from 'uuid/v4';\n\n// components\nimport SearchBar from './search/SearchBar'\nimport RestaurantPanel from './RestaurantPanel'\nimport Loading from './Loading'\nimport { SearchProvider, SearchConsumer } from './search/SearchContext'\n\n// constants\nimport Constants from './Constants'\n\nclass Content extends Component {\n  // static propTypes = {\n  //     className: PropTypes.string,\n  // };\n\n  constructor(props) {\n    super(props);\n\n    this.searchTextChange = this.searchTextChange.bind(this)\n    this.searchByValue = this.searchByValue.bind(this)\n\n    this.state = {\n      restaurants: [],\n      showLoading: false,\n      modifyOrig: false,\n      responseId: ''\n    }\n\n    this.allConstants = new Constants()\n    // console.log('Received props', this.props)\n  }\n\n\n  searchTextChange(event) {\n    event.persist()\n    // change the state with the value typed in the search box\n    this.setState({ searchText: event.target.value })\n\n    if (event.keyCode == 13 || event.which == 13) {\n      this.searchByValue()\n    }\n\n  }\n\n  componentDidMount() {\n    this.getRestaurants()\n  }\n\n  searchByValue(event) {\n\n    const { allConstants } = this\n\n    if (event) {\n      event.persist()\n      let id = event.target.id\n      console.log('Function clicked from COntext', id)\n\n      let searchType = id.substring(0, id.indexOf('-'))\n      let searchValue = id.substr(id.indexOf('-') + 1)\n      \n      // define the data\n      let data = {}\n      data[searchType] = searchValue\n\n      // define url\n      let url = allConstants.getRestaurants.replace('{value}', '')\n      \n      // API call to the back end\n      this.getRestaurants(url, data)\n\n    } else if (this.state.searchText != \"\") {\n      // if ENTER key is pressed\n      console.log('ENTER key pressed / SEARCH button clicked...', this.state.searchText)\n\n      // API call to the back end\n      this.getRestaurants()\n    }\n  }\n\n  // get all the restaurants\n  getRestaurants(url, data) {\n    // set state to show the Loading icon\n    this.setState({ showLoading: true })\n    const { allConstants } = this\n\n    let searchText = (this.state.searchText && (this.props.searchText !== this.state.searchText)) ? this.state.searchText : this.props.searchText\n    let axiosConfig = {\n      url: (url) ? url : allConstants.getRestaurants.replace('{value}', searchText),\n      method: allConstants.method.POST,\n      header: allConstants.header\n    }\n\n    if (data) {\n      axiosConfig[\"data\"] = data\n    }\n    // console.log('CONFIG is now', axiosConfig)\n\n    axios(axiosConfig)\n      .then((res) => {\n        console.log('Response from back end', res.data)\n\n        // add the response along with an unique id for each response\n        this.setState({ restaurants: [...res.data], showLoading: false, modifyOrig: true, responseId: uuidv4() })\n      })\n      .catch((err) => {\n        console.log('unable to get the data', err)\n      })\n  }\n\n  render() {\n\n    let { restaurants, showLoading, modifyOrig, responseId } = this.state\n    // console.log('State in the Content', this.state)\n\n    return (\n      <div className=\"content-div\">\n        <div className=\"content-div-search-bar\">\n          <SearchBar\n            searchByValue={this.searchByValue}\n            searchTextChange={this.searchTextChange} />\n        </div>\n        {(showLoading == true) ? <Loading /> : null}\n        <SearchProvider value={this.searchByValue}>\n          <RestaurantPanel showLoading={showLoading} restaurants={restaurants} modifyOrig={modifyOrig} responseId={responseId} />\n        </SearchProvider>\n      </div>\n    );\n  }\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}